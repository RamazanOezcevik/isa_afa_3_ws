<?xml version="1.0"?>
<robot name="ackermann_drive" xmlns:xacro="http://ros.org/wiki/xacro">
  <material name="Black">
    <color rgba="0.1 0.1 0.1 1" />
  </material>
  <material name="DarkBlue">
    <color rgba="0.2 0.2 0.4 1" />
  </material>
  <material name="Red">
    <color rgba="0.7 0.1 0.1 1" />
  </material>

  <xacro:include filename="$(find isa_afa_3)/urdf/ackermann_vehicle.gazebo" />

  <!-- Properties -->
  <xacro:property name="chassis_mass" value="1000" />
  <xacro:property name="chassis_length" value="4.5" />
  <xacro:property name="chassis_width" value="1.8" />
  <xacro:property name="chassis_height" value="1.4" />
  <xacro:property name="axle_mass" value="50" />
  <xacro:property name="axle_radius" value="0.1" />
  <xacro:property name="axle_width" value="1.0" />
  <xacro:property name="wheel_mass" value="20" />
  <xacro:property name="wheel_radius" value="0.3" />
  <xacro:property name="wheel_width" value="0.2" />
  <xacro:property name="wheel_base" value="2.6" />
  <xacro:property name="lidar_mass" value="0.5" />
  <xacro:property name="lidar_radius" value="0.15" />
  <xacro:property name="lidar_length" value="0.2" />
  <xacro:property name="camera_mass" value="0.05" />
  <xacro:property name="camera_width" value="0.1" />
  <xacro:property name="camera_depth" value="0.03" />
  <xacro:property name="camera_height" value="0.07" />
  <xacro:property name="sonar_mass" value="0.05" />
  <xacro:property name="sonar_width" value="0.1" />
  <xacro:property name="sonar_depth" value="0.03" />
  <xacro:property name="sonar_height" value="0.1" />

  <!-- Commonly used inertial: Box  -->
  <xacro:macro name="box_inertia" params="m w h d x y z">
    <inertial>
      <origin xyz="${x} ${y} ${z}" rpy="${pi/2} 0 ${pi/2}" />
      <mass value="${m}" />
      <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}" iyz="0.0" izz="${(m/12) * (w*w + h*h)}" />
    </inertial>
  </xacro:macro>

  <!-- Commonly used inertial: Cylinder  -->
  <xacro:macro name="cylinder_inertia" params="m r h">
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <mass value="${m}" />
      <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (3*r*r + h*h)}" iyz="0.0" izz="${(m/2) * (r*r)}" />
    </inertial>
  </xacro:macro>

  <link name="base_link" />

  <!-- Chassis -->
  <link name="chassis">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://isa_afa_3/meshes/chassis.stl" />
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://isa_afa_3/meshes/chassis.stl" />
      </geometry>
      <material name="DarkBlue" />
    </visual>

    <xacro:box_inertia m="${chassis_mass}" w="${chassis_width}" d="${chassis_length}" h="${chassis_height}" x="-${chassis_length/2-0.9}" y="0" z="${chassis_height/2}" />
  </link>

  <joint name="chassis_joint" type="fixed">
    <origin xyz="0 0 0" rpy="0 0 0" />
    <parent link="base_link" />
    <child link="chassis" />
  </joint>

  <link name="base_footprint" />

  <joint name="base_joint" type="fixed">
    <origin xyz="0 0 -${wheel_radius}" rpy="0 0 0" />
    <parent link="base_link" />
    <child link="base_footprint" />
  </joint>

  <!-- rear left wheel Link -->
  <link name="rear_left_wheel">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <cylinder length="${wheel_width}" radius="${wheel_radius}" />
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <cylinder length="${wheel_width}" radius="${wheel_radius}" />
      </geometry>
      <material name="Black" />
    </visual>
    <xacro:cylinder_inertia m="${wheel_mass}" r="${wheel_radius}" h="${wheel_width}" />
  </link>

  <joint name="rear_left_wheel_joint" type="continuous">
    <origin xyz="-${wheel_base} ${chassis_width/2-wheel_width/2} 0" rpy="-${pi/2} 0 0" />
    <parent link="chassis" />
    <child link="rear_left_wheel" />
    <axis xyz="0 0 1" />
    <dynamics damping="0.2" />
  </joint>

  <!-- rear right wheel Link -->
  <link name="rear_right_wheel">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <cylinder length="${wheel_width}" radius="${wheel_radius}" />
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <cylinder length="${wheel_width}" radius="${wheel_radius}" />
      </geometry>
      <material name="Black" />
    </visual>
    <xacro:cylinder_inertia m="${wheel_mass}" r="${wheel_radius}" h="${wheel_width}" />
  </link>

  <joint name="rear_right_wheel_joint" type="continuous">
    <origin xyz="-${wheel_base} -${chassis_width/2-wheel_width/2} 0" rpy="-${pi/2} 0 0" />
    <parent link="chassis" />
    <child link="rear_right_wheel" />
    <axis xyz="0 0 1" />
    <dynamics damping="0.2" />
  </joint>

  <!-- left steer Link -->
  <link name="left_wheel_steering">
    <inertial>
      <mass value="0.1"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.002" />
    </inertial>
  </link>

  <joint name="left_wheel_steering_joint" type="revolute">
    <origin xyz="0 ${chassis_width/2-wheel_width/2} 0" rpy="0 0 0" />
    <parent link="chassis" />
    <child link="left_wheel_steering" />
    <axis xyz="0 0 1" />
    <dynamics damping="0.2" />
    <limit effort="1000.0" lower="-${pi/2}" upper="${pi/2}" velocity="30"/>
  </joint>

  <!-- right steer Link -->
  <link name="right_wheel_steering">
    <inertial>
      <mass value="0.1"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.002" />
    </inertial>
  </link>

  <joint name="right_wheel_steering_joint" type="revolute">
    <origin xyz="0 -${chassis_width/2-wheel_width/2} 0" rpy="0 0 0" />
    <parent link="chassis" />
    <child link="right_wheel_steering" />
    <axis xyz="0 0 1" />
    <dynamics damping="0.2" />
    <limit effort="1000.0" lower="-${pi/2}" upper="${pi/2}" velocity="30"/>
  </joint>

  <!-- front left wheel Link -->
  <link name="front_left_wheel">
    <collision>
      <geometry>
        <cylinder length="${wheel_width}" radius="${wheel_radius}" />
      </geometry>
    </collision>
    <visual>
      <geometry>
        <cylinder length="${wheel_width}" radius="${wheel_radius}" />
      </geometry>
      <material name="Black" />
    </visual>
    <xacro:cylinder_inertia m="${wheel_mass}" r="${wheel_radius}" h="${wheel_width}" />
  </link>

  <joint name="front_left_wheel_joint" type="continuous">
    <origin xyz="0 0 0" rpy="-${pi/2} 0 0" />
    <parent link="left_wheel_steering" />
    <child link="front_left_wheel" />
    <axis xyz="0 0 1" />
    <dynamics damping="0.2" />
  </joint>

  <!-- front right wheel Link -->
  <link name="front_right_wheel">
    <collision>
      <geometry>
        <cylinder length="${wheel_width}" radius="${wheel_radius}" />
      </geometry>
    </collision>
    <visual>
      <geometry>
        <cylinder length="${wheel_width}" radius="${wheel_radius}" />
      </geometry>
      <material name="Black" />
    </visual>
    <xacro:cylinder_inertia m="${wheel_mass}" r="${wheel_radius}" h="${wheel_width}" />
  </link>

  <joint name="front_right_wheel_joint" type="continuous">
    <origin xyz="0 0 0" rpy="-${pi/2} 0 0" />
    <parent link="right_wheel_steering" />
    <child link="front_right_wheel" />
    <axis xyz="0 0 1" />
    <dynamics damping="0.2" />
  </joint>

  <ros2_control name="GazeboSystem" type="system">
    <hardware>
      <plugin>gz_ros2_control/GazeboSimSystem</plugin>
    </hardware>
    <joint name="rear_left_wheel_joint">
      <command_interface name="velocity" />
      <state_interface name="velocity" />
      <state_interface name="position" />
    </joint>
    <joint name="rear_right_wheel_joint">
      <command_interface name="velocity" />
      <state_interface name="velocity" />
      <state_interface name="position" />
    </joint>
    <joint name="left_wheel_steering_joint">
      <command_interface name="position" />
      <state_interface name="position" />
    </joint>
    <joint name="right_wheel_steering_joint">
      <command_interface name="position" />
      <state_interface name="position" />
    </joint>
    <joint name="front_left_wheel_joint">
      <state_interface name="position" />
      <state_interface name="velocity" />
    </joint>
    <joint name="front_right_wheel_joint">
      <state_interface name="position" />
      <state_interface name="velocity" />
    </joint>
  </ros2_control>

  <gazebo>
    <plugin filename="gz_ros2_control-system" name="gz_ros2_control::GazeboSimROS2ControlPlugin">
      <parameters>$(find isa_afa_3)/config/ackermann_drive_controller.yaml</parameters>
    </plugin>
  </gazebo>


  <!-- Sensors -->

  <!-- Lidar -->
  <link name="lidar_link">
    <xacro:cylinder_inertia m="${lidar_mass}" r="${lidar_radius}" h="${lidar_length}" />
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <cylinder radius="${lidar_radius}" length="${lidar_length}" />
      </geometry>
      <material name="Red" />
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <cylinder radius="${lidar_radius}" length="${lidar_length}" />
      </geometry>
    </collision>
  </link>

  <joint name="lidar_joint" type="fixed">
    <origin rpy="0 0 0" xyz="-${wheel_base/2} 0 ${lidar_length/2+chassis_height}" />
    <child link="lidar_link" />
    <parent link="chassis" />
  </joint>

  <!-- IMU -->
  <link name="imu_link">
    <xacro:box_inertia m="0.1" w="0.1" d="0.1" h="0.1" x="0" y="0" z="0" />
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="0.1 0.1 0.1" />
      </geometry>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="0.1 0.1 0.1" />
      </geometry>
    </collision>
  </link>

  <joint name='imu_joint' type='fixed'>
    <origin rpy="0 0 0" xyz="0 0 0" />
    <child link="imu_link" />
    <parent link="chassis" />
  </joint>

  <!-- Camera -->
  <link name="camera_link">
    <xacro:box_inertia m="${camera_mass}" w="${camera_width}" d="${camera_depth}" h="${camera_height}" x="0" y="0" z="0" />
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="0.1 0.1 0.1" />
      </geometry>
      <material name="Red" />
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="0.1 0.1 0.1" />
      </geometry>
    </collision>
  </link>

  <joint name='camera_joint' type='fixed'>
    <origin rpy="0 0 0" xyz="0.9 0 0.3" />
    <child link="camera_link" />
    <parent link="base_link" />
  </joint>

  <!-- Sonar -->
  <link name="sonar_link">
    <xacro:box_inertia m="${sonar_mass}" w="${sonar_width}" d="${sonar_depth}" h="${sonar_height}" x="0" y="0" z="0" />
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="0.1 0.1 0.1" />
      </geometry>
      <material name="Red" />
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="0.1 0.1 0.1" />
      </geometry>
    </collision>
  </link>

  <joint name='sonar_joint' type='fixed'>
    <origin rpy="0 0 0" xyz="0.9 0 0.1" />
    <child link="sonar_link" />
    <parent link="base_link" />
  </joint>
</robot>
